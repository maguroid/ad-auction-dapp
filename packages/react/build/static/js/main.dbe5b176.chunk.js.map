{"version":3,"sources":["components/Header/index.tsx","types/factories/Ads__factory.ts","context/metamask/provider.tsx","context/metamask/useMetamask.ts","hooks/useAdsContract/index.ts","components/Form/index.tsx","hooks/useForm/index.tsx","assets/images/no-image.png","components/AdList/index.tsx","hooks/useDialog/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx","utils/ipfs/index.ts"],"names":["Header","className","href","target","rel","_abi","inputs","internalType","name","type","stateMutability","outputs","constant","components","payable","_bytecode","isSuperArgs","xs","length","Ads__factory","args","contractName","overrides","address","signer","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","MetamaskContext","createContext","isInstalled","window","ethereum","provider","VoidSigner","currentAccount","isConnecting","isConnected","chainId","networkId","MetamaskCtxProvider","children","useMetamask","metamaskState","connectRequest","setup","onUnmount","fetchState","useAsync","useEffect","MetamaskInstalled","Provider","value","loading","error","message","Center","Button","onClick","MetamaskNotInstalled","ButtonLink","styled","div","button","a","AVAILABLE_CHAIN_IDS","ropsten","localhost","useState","setProvider","setCurrentAccount","setIsConnecting","setIsConnected","ethers","providers","Web3Provider","web3","getSigner","setSigner","process","setChainId","setNetworkId","request","method","params","Number","toString","on","onAccountsChanged","onChainChanged","listAccounts","accounts","console","info","removeListener","warn","_chainId","decimal_chain","isAvailableChain","Object","values","find","v","then","network","undefined","useAdsContract","useContext","adsContract","setAdsContract","getAds","getAd","id","buy","title","imageCID","description","siteUrl","from","parseEther","ether","res","connect","networks","Form","ad","callBack","image","setImage","imageSrc","setImageSrc","setRequest","onSubmit","e","preventDefault","removable","ipfs","add","cid","txRes","pin","rm","URL","createObjectURL","useForm","minPrice","useCallback","BigNumber","price","parseUnits","formatEther","htmlFor","min","placeholder","step","required","onChange","currentTarget","files","accept","Image","src","alt","maxLength","img","Flex","Item","Card","article","Cover","AdList","isShow","setIsShow","Dialog","open","toggleDialog","useDialog","ads","setAds","owner","currentAd","setCurrentAd","getHttpUrl","noImage","httpsUrl","fetch","map","onBtnClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","host","auth","Buffer","create","port","protocol","headers","authorization"],"mappings":"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","file":"static/js/main.dbe5b176.chunk.js","sourcesContent":["function Header() {\n  return (\n    <header className=\"container-fluid\">\n      <hgroup>\n        <h1>Ad Auction.eth</h1>\n        <h2>React with ethers.js</h2>\n      </hgroup>\n      <p>You can overwrite these ads. Try it !</p>\n      <p>\n        <mark>\n          Please make sure that your metamask wallet is{\" \"}\n          <a\n            href=\"https://medium.com/compound-finance/the-beginners-guide-to-using-an-ethereum-test-network-95bbbc85fc1d\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            connected Ropsten Network.\n          </a>\n        </mark>\n      </p>\n    </header>\n  );\n}\n\nexport default Header;\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  Signer,\n  utils,\n  Contract,\n  ContractFactory,\n  Overrides,\n  BigNumberish,\n} from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Ads, AdsInterface } from \"../Ads\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"length\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ads\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"imageCID\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"siteUrl\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"price\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ids\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"lastId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAd\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"title\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"imageCID\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"siteUrl\",\n            type: \"string\",\n          },\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Ads.Ad\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"getAds\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"title\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"imageCID\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"siteUrl\",\n            type: \"string\",\n          },\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Ads.Ad[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"imageCID\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"siteUrl\",\n        type: \"string\",\n      },\n    ],\n    name: \"buy\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"length\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"expand\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620018cc380380620018cc83398181016040528101906200003791906200013e565b62000048816200004f60201b60201c565b506200024a565b600060016002546200006291906200019f565b9050600082826200007491906200019f565b905060008290505b81811015620000f8576001819080600181540180825580915050600190039060005260206000200160009091909190915055806000808381526020019081526020016000206000018190555060026000815480929190620000dd90620001fc565b91905055508080620000ef90620001fc565b9150506200007c565b50505050565b600080fd5b6000819050919050565b620001188162000103565b81146200012457600080fd5b50565b60008151905062000138816200010d565b92915050565b600060208284031215620001575762000156620000fe565b5b6000620001678482850162000127565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001ac8262000103565b9150620001b98362000103565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620001f157620001f062000170565b5b828201905092915050565b6000620002098262000103565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200023f576200023e62000170565b5b600182019050919050565b611672806200025a6000396000f3fe6080604052600436106100705760003560e01c80637ede1c071161004e5780637ede1c071461010c578063c1292cc314610149578063fab11b8214610174578063fac333ac1461019057610070565b80630955ae991461007557806311a7a4c0146100a0578063682904a5146100e3575b600080fd5b34801561008157600080fd5b5061008a6101cd565b604051610097919061104e565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c291906110b0565b610568565b6040516100da9796959493929190611145565b60405180910390f35b3480156100ef57600080fd5b5061010a600480360381019061010591906110b0565b6107ea565b005b34801561011857600080fd5b50610133600480360381019061012e91906110b0565b61088f565b6040516101409190611281565b60405180910390f35b34801561015557600080fd5b5061015e610b6d565b60405161016b91906112a3565b60405180910390f35b61018e600480360381019061018991906113f3565b610b73565b005b34801561019c57600080fd5b506101b760048036038101906101b291906110b0565b610cce565b6040516101c491906112a3565b60405180910390f35b6060600060025467ffffffffffffffff8111156101ed576101ec6112c8565b5b60405190808252806020026020018201604052801561022657816020015b610213610cf2565b81526020019060019003908161020b5790505b50905060005b6002548110156105605760006001828154811061024c5761024b6114de565b5b9060005260206000200154905060008060008381526020019081526020016000206040518060e0016040529081600082015481526020016001820180546102929061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546102be9061153c565b801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b505050505081526020016002820180546103249061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546103509061153c565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b505050505081526020016003820180546103b69061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061153c565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505050505081526020016004820180546104489061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546104749061153c565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815250509050808484815181106105405761053f6114de565b5b6020026020010181905250505080806105589061159d565b91505061022c565b508091505090565b60006020528060005260406000206000915090508060000154908060010180546105919061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546105bd9061153c565b801561060a5780601f106105df5761010080835404028352916020019161060a565b820191906000526020600020905b8154815290600101906020018083116105ed57829003601f168201915b50505050509080600201805461061f9061153c565b80601f016020809104026020016040519081016040528092919081815260200182805461064b9061153c565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b5050505050908060030180546106ad9061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546106d99061153c565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b50505050509080600401805461073b9061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546107679061153c565b80156107b45780601f10610789576101008083540402835291602001916107b4565b820191906000526020600020905b81548152906001019060200180831161079757829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060154905087565b600060016002546107fb91906115e6565b90506000828261080b91906115e6565b905060008290505b818110156108895760018190806001815401808255809150506001900390600052602060002001600090919091909150558060008083815260200190815260200160002060000181905550600260008154809291906108719061159d565b919050555080806108819061159d565b915050610813565b50505050565b610897610cf2565b6000808381526020019081526020016000206040518060e0016040529081600082015481526020016001820180546108ce9061153c565b80601f01602080910402602001604051908101604052809291908181526020018280546108fa9061153c565b80156109475780601f1061091c57610100808354040283529160200191610947565b820191906000526020600020905b81548152906001019060200180831161092a57829003601f168201915b505050505081526020016002820180546109609061153c565b80601f016020809104026020016040519081016040528092919081815260200182805461098c9061153c565b80156109d95780601f106109ae576101008083540402835291602001916109d9565b820191906000526020600020905b8154815290600101906020018083116109bc57829003601f168201915b505050505081526020016003820180546109f29061153c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1e9061153c565b8015610a6b5780601f10610a4057610100808354040283529160200191610a6b565b820191906000526020600020905b815481529060010190602001808311610a4e57829003601f168201915b50505050508152602001600482018054610a849061153c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab09061153c565b8015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815250509050919050565b60025481565b600080868152602001908152602001600020600601543411610b9457600080fd5b60006040518060e001604052808781526020018681526020018581526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200134815250905080600080888152602001908152602001600020600082015181600001556020820151816001019080519060200190610c1a929190610d45565b506040820151816002019080519060200190610c37929190610d45565b506060820151816003019080519060200190610c54929190610d45565b506080820151816004019080519060200190610c71929190610d45565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060155905050505050505050565b60018181548110610cde57600080fd5b906000526020600020016000915090505481565b6040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b828054610d519061153c565b90600052602060002090601f016020900481019282610d735760008555610dba565b82601f10610d8c57805160ff1916838001178555610dba565b82800160010185558215610dba579182015b82811115610db9578251825591602001919060010190610d9e565b5b509050610dc79190610dcb565b5090565b5b80821115610de4576000816000905550600101610dcc565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610e2781610e14565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e67578082015181840152602081019050610e4c565b83811115610e76576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e9882610e2d565b610ea28185610e38565b9350610eb2818560208601610e49565b610ebb81610e7c565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef182610ec6565b9050919050565b610f0181610ee6565b82525050565b600060e083016000830151610f1f6000860182610e1e565b5060208301518482036020860152610f378282610e8d565b91505060408301518482036040860152610f518282610e8d565b91505060608301518482036060860152610f6b8282610e8d565b91505060808301518482036080860152610f858282610e8d565b91505060a0830151610f9a60a0860182610ef8565b5060c0830151610fad60c0860182610e1e565b508091505092915050565b6000610fc48383610f07565b905092915050565b6000602082019050919050565b6000610fe482610de8565b610fee8185610df3565b93508360208202850161100085610e04565b8060005b8581101561103c578484038952815161101d8582610fb8565b945061102883610fcc565b925060208a01995050600181019050611004565b50829750879550505050505092915050565b600060208201905081810360008301526110688184610fd9565b905092915050565b6000604051905090565b600080fd5b600080fd5b61108d81610e14565b811461109857600080fd5b50565b6000813590506110aa81611084565b92915050565b6000602082840312156110c6576110c561107a565b5b60006110d48482850161109b565b91505092915050565b6110e681610e14565b82525050565b600082825260208201905092915050565b600061110882610e2d565b61111281856110ec565b9350611122818560208601610e49565b61112b81610e7c565b840191505092915050565b61113f81610ee6565b82525050565b600060e08201905061115a600083018a6110dd565b818103602083015261116c81896110fd565b9050818103604083015261118081886110fd565b9050818103606083015261119481876110fd565b905081810360808301526111a881866110fd565b90506111b760a0830185611136565b6111c460c08301846110dd565b98975050505050505050565b600060e0830160008301516111e86000860182610e1e565b50602083015184820360208601526112008282610e8d565b9150506040830151848203604086015261121a8282610e8d565b915050606083015184820360608601526112348282610e8d565b9150506080830151848203608086015261124e8282610e8d565b91505060a083015161126360a0860182610ef8565b5060c083015161127660c0860182610e1e565b508091505092915050565b6000602082019050818103600083015261129b81846111d0565b905092915050565b60006020820190506112b860008301846110dd565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61130082610e7c565b810181811067ffffffffffffffff8211171561131f5761131e6112c8565b5b80604052505050565b6000611332611070565b905061133e82826112f7565b919050565b600067ffffffffffffffff82111561135e5761135d6112c8565b5b61136782610e7c565b9050602081019050919050565b82818337600083830152505050565b600061139661139184611343565b611328565b9050828152602081018484840111156113b2576113b16112c3565b5b6113bd848285611374565b509392505050565b600082601f8301126113da576113d96112be565b5b81356113ea848260208601611383565b91505092915050565b600080600080600060a0868803121561140f5761140e61107a565b5b600061141d8882890161109b565b955050602086013567ffffffffffffffff81111561143e5761143d61107f565b5b61144a888289016113c5565b945050604086013567ffffffffffffffff81111561146b5761146a61107f565b5b611477888289016113c5565b935050606086013567ffffffffffffffff8111156114985761149761107f565b5b6114a4888289016113c5565b925050608086013567ffffffffffffffff8111156114c5576114c461107f565b5b6114d1888289016113c5565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061155457607f821691505b602082108114156115685761156761150d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115a882610e14565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115db576115da61156e565b5b600182019050919050565b60006115f182610e14565b91506115fc83610e14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116315761163061156e565b5b82820190509291505056fea2646970667358221220e4144960afb0992250cdb569c84e16a80aee52998b56aed44cc56b571ed3d35664736f6c634300080b0033\";\n\ntype AdsConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: AdsConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Ads__factory extends ContractFactory {\n  constructor(...args: AdsConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Ads\";\n  }\n\n  deploy(\n    length: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Ads> {\n    return super.deploy(length, overrides || {}) as Promise<Ads>;\n  }\n  getDeployTransaction(\n    length: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(length, overrides || {});\n  }\n  attach(address: string): Ads {\n    return super.attach(address) as Ads;\n  }\n  connect(signer: Signer): Ads__factory {\n    return super.connect(signer) as Ads__factory;\n  }\n  static readonly contractName: \"Ads\";\n  public readonly contractName: \"Ads\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): AdsInterface {\n    return new utils.Interface(_abi) as AdsInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Ads {\n    return new Contract(address, _abi, signerOrProvider) as Ads;\n  }\n}\n","import { createContext, useEffect } from \"react\";\nimport { useAsync } from \"react-use\";\nimport { useMetamask } from \"context/metamask\";\nimport { MetamaskState } from \"types/metamask\";\nimport { VoidSigner } from \"ethers\";\n\nimport styled from \"styled-components\";\n\nexport const MetamaskContext = createContext<MetamaskState>({\n  isInstalled: !!window.ethereum,\n  provider: window.ethereum,\n  signer: new VoidSigner(\"\"),\n  currentAccount: \"\",\n  isConnecting: false,\n  isConnected: false,\n  chainId: \"3\",\n  networkId: \"3\",\n});\n\nexport const MetamaskCtxProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const { metamaskState, connectRequest, setup, onUnmount } = useMetamask();\n\n  const fetchState = useAsync(setup, [metamaskState.currentAccount]);\n\n  useEffect(() => {\n    return onUnmount;\n  });\n\n  const MetamaskInstalled = () => (\n    <MetamaskContext.Provider value={metamaskState}>\n      {metamaskState.isConnected ? (\n        children\n      ) : fetchState.loading ? null : fetchState.error ? (\n        <dialog>\n          <article>Error: {fetchState.error.message}</article>\n        </dialog>\n      ) : (\n        <Center>\n          <Button\n            area-busy={`${metamaskState.isConnecting}`}\n            onClick={connectRequest}\n          >\n            Connect Your Wallet\n          </Button>\n        </Center>\n      )}\n    </MetamaskContext.Provider>\n  );\n\n  const MetamaskNotInstalled = () => (\n    <Center>\n      <ButtonLink\n        type=\"button\"\n        href=\"https://metamask.app.link/dapp/maguroid.github.io/ad-auction-dapp/\"\n      >\n        Please install Metamask\n      </ButtonLink>\n      ;\n    </Center>\n  );\n\n  return metamaskState.isInstalled ? (\n    <MetamaskInstalled />\n  ) : (\n    <MetamaskNotInstalled />\n  );\n};\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  width: auto;\n`;\n\nconst ButtonLink = styled.a`\n  display: inline-block;\n  width: auto;\n`;\n","import { useState } from \"react\";\nimport { BigNumberish, ethers } from \"ethers\";\nimport { MetamaskState } from \"types/metamask\";\n\nexport const AVAILABLE_CHAIN_IDS = {\n  ropsten: \"3\",\n  localhost: \"1337\",\n} as const;\n\nexport const AVAILABLE_NETWORK_IDS = {\n  ropsten: \"3\",\n  localhost: \"1337\",\n} as const;\n\nexport const useMetamask = () => {\n  const isInstalled = !!window.ethereum;\n  const [provider, setProvider] = useState(window.ethereum);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [web3] = useState(new ethers.providers.Web3Provider(provider, \"any\"));\n  const [signer, setSigner] = useState(web3.getSigner());\n  const [chainId, setChainId] = useState(\n    process.env.REACT_APP_DEFAULT_CHAIN_ID\n  );\n  const [networkId, setNetworkId] = useState(\n    process.env.REACT_APP_DEFAULT_NETWORK_ID\n  );\n\n  const metamaskState: MetamaskState = {\n    isInstalled,\n    provider,\n    signer,\n    currentAccount,\n    isConnecting,\n    isConnected,\n    chainId,\n    networkId,\n  };\n\n  const connectRequest = async () => {\n    setIsConnecting(true);\n    await provider.request({\n      method: \"eth_requestAccounts\",\n      params: [],\n    });\n    setIsConnecting(false);\n  };\n\n  const setup = async () => {\n    // set default network\n    await provider.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0x\" + Number(chainId).toString(16) }],\n    });\n    provider.on(\"accountsChanged\", onAccountsChanged);\n    provider.on(\"chainChanged\", onChainChanged);\n\n    const accounts = await web3.listAccounts();\n\n    if (accounts.length === 0) {\n      console.info(\"Please Connect to Metamask\");\n    } else if (currentAccount !== accounts[0]) {\n      setProvider(provider);\n      setIsConnected(true);\n      setCurrentAccount(accounts[0]);\n      setChainId(chainId);\n      setNetworkId(networkId);\n    }\n\n    return () => {\n      if (isConnected) {\n        provider.removeListener(\"accountsChanged\", onAccountsChanged);\n        provider.removeListener(\"chainChanged\", onChainChanged);\n      }\n    };\n  };\n\n  const onAccountsChanged = (accounts: string[]) => {\n    if (accounts.length === 0) {\n      console.warn(\"No Accounts were found\");\n      setIsConnected(false);\n      setCurrentAccount(\"\");\n    } else if (currentAccount !== accounts[0]) {\n      setCurrentAccount(accounts[0]);\n      setSigner(web3.getSigner(accounts[0]));\n    }\n    console.info(\"accounts changed\", accounts[0]);\n  };\n\n  const onChainChanged = (_chainId: BigNumberish) => {\n    const decimal_chain = Number(_chainId).toString();\n\n    const isAvailableChain = Object.values(AVAILABLE_CHAIN_IDS).find(\n      (v) => v === decimal_chain\n    );\n\n    console.info(\"chain changed\", decimal_chain);\n\n    provider\n      .request({\n        method: \"net_version\",\n        params: [],\n      })\n      .then((network: any) => {\n        setNetworkId(network);\n      });\n    if (!isAvailableChain) {\n      console.error(\"This network is not available in this app\");\n      setChainId(undefined);\n    }\n  };\n\n  const onUnmount = () => {\n    if (isConnected) {\n      provider.removeListener(\"accountsChanged\", onAccountsChanged);\n      provider.removeListener(\"chainChanged\", onChainChanged);\n    }\n  };\n\n  return {\n    metamaskState,\n    web3,\n    connectRequest,\n    setup,\n    onUnmount,\n  };\n};\n","import { useContext, useState, useEffect } from \"react\";\nimport { ethers, BigNumberish } from \"ethers\";\nimport { Ads__factory } from \"types/factories/Ads__factory\";\nimport { Ads } from \"types/Ads\";\nimport { MetamaskContext } from \"context/metamask\";\nimport { networks } from \"@auction-dapp/truffle/build/contracts/Ads.json\";\n\nexport type AdBuyingRequest = {\n  id: BigNumberish;\n  title: string;\n  imageCID: string;\n  description: string;\n  siteUrl: string;\n  ether: string;\n};\nexport const useAdsContract = () => {\n  const metamaskState = useContext(MetamaskContext);\n  const [adsContract, setAdsContract] = useState<Ads | undefined>(undefined);\n\n  const getAds = async () => {\n    return await adsContract?.getAds();\n  };\n\n  const getAd = async (id: BigNumberish) => {\n    return await adsContract?.getAd(id);\n  };\n\n  const buy = async (request: AdBuyingRequest) => {\n    try {\n      const res = await adsContract?.buy(\n        request.id,\n        request.title,\n        request.imageCID,\n        request.description,\n        request.siteUrl,\n        {\n          from: metamaskState.currentAccount,\n          value: ethers.utils.parseEther(request.ether),\n        }\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    if (metamaskState.networkId === undefined) {\n      setAdsContract(undefined);\n      return;\n    }\n\n    setAdsContract(\n      Ads__factory.connect(\n        networks[metamaskState.networkId]?.address ?? \"\",\n        metamaskState.signer\n      )\n    );\n  }, [metamaskState.networkId, metamaskState.signer]);\n\n  return {\n    adsContract,\n    getAds,\n    getAd,\n    buy,\n  };\n};\n","import { useForm } from \"hooks/useForm\";\nimport { Ads } from \"types\";\nimport { ethers, BigNumber } from \"ethers\";\nimport { useCallback } from \"react\";\n\nimport styled from \"styled-components\";\nimport { parseUnits } from \"ethers/lib/utils\";\n\nexport function Form({\n  ad,\n  callBack,\n}: {\n  ad: Ads.AdStruct;\n  callBack: () => void;\n}) {\n  const { image, imageSrc, request, setImage, setRequest, onSubmit } = useForm(\n    ad.id,\n    callBack\n  );\n  const name = image?.name;\n  const minPrice = useCallback(() => {\n    return BigNumber.from(ad.price).add(parseUnits(\"0.0001\", \"ether\"));\n  }, [ad]);\n  return (\n    <form onSubmit={onSubmit}>\n      <section>\n        <h3>Proceed with the transaction</h3>\n        <p>It should take few minutes to reflect your buying. Please wait...</p>\n      </section>\n\n      <section>\n        <h4>Current Price:</h4>\n        <b>{ethers.utils.formatEther(ad.price)}ETH</b>\n      </section>\n\n      <section>\n        <label htmlFor=\"ether\">\n          <b>Enter amount (ETH)</b>\n          <input\n            type=\"number\"\n            min={ethers.utils.formatEther(minPrice())}\n            placeholder={ethers.utils.formatEther(minPrice())}\n            step=\"0.0001\"\n            required\n            onChange={(e) =>\n              setRequest((request) => ({ ...request, ether: e.target.value }))\n            }\n          />\n        </label>\n        <section />\n        <section>\n          <label htmlFor=\"image\">\n            <b>Select your AD's image</b>\n            <input\n              className=\"hidden\"\n              type=\"file\"\n              onChange={(e) => setImage(e.currentTarget.files?.[0])}\n              id=\"image\"\n              name=\"image\"\n              accept=\"image/*\"\n              required\n            />\n          </label>\n        </section>\n      </section>\n      <section>\n        <p>\n          <b>filename</b>\n        </p>\n        <p>{image?.name}</p>\n      </section>\n      <section>\n        <b>Preview</b>\n        <Image src={imageSrc} alt={name} />\n      </section>\n      <section>\n        <label htmlFor=\"title\">\n          <b>Title</b>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={request.title}\n            placeholder=\"ex. New Products are released !\"\n            maxLength={60}\n            required\n            onChange={(e) =>\n              setRequest((request) => ({ ...request, title: e.target.value }))\n            }\n          />\n        </label>\n      </section>\n      <section>\n        <label htmlFor=\"site-url\">\n          <b>Your Site URL</b>\n        </label>\n        <input\n          type=\"text\"\n          id=\"site-url\"\n          name=\"site-url\"\n          value={request.siteUrl}\n          placeholder=\"ex. https://github.com/maguroid\"\n          required\n          onChange={(e) =>\n            setRequest((request) => ({ ...request, siteUrl: e.target.value }))\n          }\n        />\n      </section>\n      <section>\n        <label htmlFor=\"description\">\n          <b>AD's description</b>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={request.description}\n            placeholder=\"ex. Awesome Project has been launched! Check it out!\"\n            maxLength={300}\n            required\n            onChange={(e) =>\n              setRequest((request) => ({\n                ...request,\n                description: e.target.value,\n              }))\n            }\n          />\n        </label>\n      </section>\n      <footer>\n        <input type=\"submit\" value=\"Confirm\" />\n        <button type=\"button\" className=\"secondary\" onClick={callBack}>\n          Cancel\n        </button>\n      </footer>\n    </form>\n  );\n}\n\nconst Image = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { ipfs } from \"utils/ipfs\";\nimport { useAdsContract } from \"hooks/useAdsContract\";\nimport { BigNumberish } from \"ethers\";\n\ninterface ClientRequest {\n  id: BigNumberish;\n  title: string;\n  image: File | undefined;\n  description: string;\n  siteUrl: string;\n  ether: string;\n}\n\nexport const useForm = (id: BigNumberish, callBack: () => void) => {\n  const [image, setImage] = useState<File>();\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const [request, setRequest] = useState<ClientRequest>({\n    id,\n    title: \"\",\n    image: undefined,\n    description: \"\",\n    siteUrl: \"\",\n    ether: \"\",\n  });\n  const { buy, getAd } = useAdsContract();\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (image === undefined) {\n      console.error(\"Error: image was not selected\");\n      return;\n    }\n\n    const removable = await getAd(request.id);\n\n    try {\n      // add image to IPFS\n      const { cid } = await ipfs.add(image);\n\n      // execute transaction\n      const txRes = await buy({ ...request, imageCID: cid.toString() });\n      console.info(\"Buying Success!: \", txRes);\n    } catch (err) {\n      console.error(\"Buying failed: \", err);\n      return;\n    }\n    callBack();\n\n    // unpin old ad image\n    if (removable?.imageCID) {\n      try {\n        await ipfs.pin.rm(removable.imageCID);\n      } catch (err) {\n        console.error(\"unpin failed: \", err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (image === undefined) return;\n    setImageSrc(URL.createObjectURL(image));\n  }, [image]);\n\n  return {\n    image,\n    setImage,\n    imageSrc,\n    setImageSrc,\n    request,\n    setRequest,\n    onSubmit,\n  };\n};\n","export default __webpack_public_path__ + \"static/media/no-image.606b3da9.png\";","import { useDialog } from \"hooks/useDialog\";\nimport { Form } from \"components/Form\";\nimport { useAdsContract } from \"hooks/useAdsContract\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Ads } from \"types/Ads\";\nimport noImage from \"assets/images/no-image.png\";\nimport { httpsUrl } from \"utils/ipfs\";\n\nimport styled from \"styled-components\";\n\nfunction AdList() {\n  const { Dialog, toggleDialog } = useDialog();\n  const [ads, setAds] = useState<Ads.AdStruct[]>([]);\n  const { adsContract } = useAdsContract();\n  const [currentAd, setCurrentAd] = useState<Ads.AdStruct>({\n    id: -1,\n    title: \"\",\n    imageCID: \"\",\n    description: \"\",\n    siteUrl: \"\",\n    owner: \"\",\n    price: -1,\n  });\n  const getHttpUrl = useCallback((ad: Ads.AdStruct) => {\n    if (ad.imageCID === \"\") return noImage;\n\n    return httpsUrl(ad.imageCID);\n  }, []);\n\n  const onBtnClick = (ad: Ads.AdStruct) => {\n    setCurrentAd(ad);\n    toggleDialog();\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const ads = (await adsContract?.getAds()) ?? [];\n        setAds(ads);\n      } catch (err) {\n        console.error(\"failed to fetch ads\", err);\n        setAds([]);\n      }\n    }\n    fetch();\n\n    return () => {\n      setAds([]);\n    };\n  }, [adsContract]);\n\n  return (\n    <Flex className=\"container-fluid\">\n      <Dialog>\n        <Form ad={currentAd} callBack={toggleDialog} />\n      </Dialog>\n      {ads.map((ad) => (\n        <Item key={ad.id.toString()}>\n          <section>\n            <Card>\n              <Cover\n                href={ad.siteUrl}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                data-tooltip=\"visit this site\"\n              >\n                <h3>{ad.title ? ad.title : \"No Sponsor here !\"}</h3>\n                <Image src={getHttpUrl(ad)} alt={ad.title} />\n              </Cover>\n              <p>\n                {ad.description\n                  ? ad.description\n                  : \"This space is available for you ! Be a sponsor !\"}\n              </p>\n              <button onClick={() => onBtnClick(ad)}>Buy this Space</button>\n            </Card>\n          </section>\n        </Item>\n      ))}\n    </Flex>\n  );\n}\nconst Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  @media screen and (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst Image = styled.img`\n  height: 300px;\n  transition: 0.5s ease;\n  object-fit: contain;\n  margin-bottom: 30px;\n`;\n\nconst Item = styled.div`\n  width: 30%;\n  &:hover ${Image} {\n    opacity: 0.3;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nconst Card = styled.article`\n  margin-top: 0;\n  word-break: break-all;\n  text-overflow: ellipsis;\n`;\n\nconst Cover = styled.a`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-decoration: none;\n`;\n\nexport default AdList;\n","import { useState } from \"react\";\n\nexport const useDialog = () => {\n  const [isShow, setIsShow] = useState(false);\n  const toggleDialog = () => {\n    setIsShow(!isShow);\n  };\n\n  const Dialog = ({ children }: { children: React.ReactNode }) => {\n    return (\n      <dialog open={isShow}>\n        <article>{children}</article>\n      </dialog>\n    );\n  };\n\n  return { Dialog, toggleDialog };\n};\n","import Header from \"../Header\";\nimport AdList from \"components/AdList\";\nimport { MetamaskCtxProvider } from \"context/metamask\";\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MetamaskCtxProvider>\n        <main>\n          <AdList />\n        </main>\n      </MetamaskCtxProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@picocss/pico\";\nimport \"assets/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { create } from \"ipfs-http-client\";\n\nconst host = process.env.REACT_APP_IPFS_HOST;\nconst port = process.env.REACT_APP_IPFS_PORT;\nconst protocol = process.env.REACT_APP_IPFS_PROTOCOL;\n\nconst auth =\n  \"Basic \" +\n  Buffer.from(\n    `${process.env.REACT_APP_PINNING_PROJECT}:${process.env.REACT_APP_PINNING_SECRET}`\n  ).toString(\"base64\");\n\nexport const ipfs = create({\n  host,\n  port,\n  protocol,\n  headers: { authorization: auth },\n});\n\nexport const httpsUrl = (cid: string) => `https://${host}/ipfs/${cid}`;\n"],"sourceRoot":""}